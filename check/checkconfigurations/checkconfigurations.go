// This file is part of arduino-check.
//
// Copyright 2020 ARDUINO SA (http://www.arduino.cc/)
//
// This software is released under the GNU General Public License version 3,
// which covers the main part of arduino-check.
// The terms of this license can be found at:
// https://www.gnu.org/licenses/gpl-3.0.en.html
//
// You can be released from the requirements of the above licenses by purchasing
// a commercial license. Buying such a license is mandatory if you want to
// modify or otherwise use the software for commercial activities involving the
// Arduino software without disclosing the source code of your own applications.
// To purchase a commercial license, send an email to license@arduino.cc.

/*
Package checkconfigurations defines the configuration of each check:
- metadata
- output template
- under which conditions it's enabled
- the level of a failure
- which function implements it
*/
package checkconfigurations

import (
	"github.com/arduino/arduino-check/check/checkfunctions"
	"github.com/arduino/arduino-check/configuration/checkmode"
	"github.com/arduino/arduino-check/project/projecttype"
)

// Type is the type for check configurations.
type Type struct {
	ProjectType projecttype.Type // The project type the check applies to.
	// The following fields provide arbitrary text for the tool output associated with each check:
	Category        string
	Subcategory     string
	ID              string // Unique check identifier: <project type identifier (L|S|P|I)><category identifier><number>
	Brief           string // Short description of the check.
	Description     string // Supplemental information about the check.
	MessageTemplate string // The warning/error message template displayed when the check fails. Will be filled by check function output.
	// The following fields define under which tool configuration modes the check will run:
	DisableModes []checkmode.Type // Check is disabled when tool is in any of these modes.
	EnableModes  []checkmode.Type // Check is only enabled when tool is in one of these modes.
	// The following fields define the check level in each configuration mode:
	InfoModes     []checkmode.Type    // Failure of the check only results in an informational message.
	WarningModes  []checkmode.Type    // Failure of the check is considered a warning.
	ErrorModes    []checkmode.Type    // Failure of the check is considered an error.
	CheckFunction checkfunctions.Type // The function that implements the check.
}

// Configurations returns the slice of check configurations.
func Configurations() []Type {
	return configurations
}

// configurations is an array of structs that define the configuration of each check.
var configurations = []Type{
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "general",
		ID:              "LP001",
		Brief:           "invalid format",
		Description:     "",
		MessageTemplate: "library.properties has an invalid format: {{.}}",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesFormat,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "LP002",
		Brief:           "missing name field",
		Description:     "",
		MessageTemplate: "missing name field in library.properties",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           "name < min length",
		Description:     "",
		MessageTemplate: "library.properties name value is less than minimum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           "name > max length",
		Description:     "",
		MessageTemplate: "library.properties name value {{.}} is longer than maximum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldGTMaxLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           "name > recommended length",
		Description:     "",
		MessageTemplate: "library.properties name value {{.}} is longer than recommended max length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldGTRecommendedLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "LP003",
		Brief:           "disallowed characters",
		Description:     "",
		MessageTemplate: "disallowed characters in library.properties name field. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldDisallowedCharacters,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           "contains spaces",
		Description:     "Best practices is for the name value, installation folder, and primary header filename to all match, but this is not possible with names containing spaces.",
		MessageTemplate: "library.properties name {{.}} contains spaces. Although supported, best practices is to not use spaces.",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldHasSpaces,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           `starts with "Arduino"`,
		Description:     `Case insensitive. 3rd party libraries added to Library Manager index prior to the enactment of this rule are "grandfathered"`,
		MessageTemplate: `Library name {{.}} starts with "Arduino". These names are reserved for official libraries.`,
		DisableModes:    []checkmode.Type{checkmode.Official},
		EnableModes:     []checkmode.Type{checkmode.Default},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldStartsWithArduino,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           "missing official prefix",
		Description:     "",
		MessageTemplate: `Library name {{.}} is missing the "Arduino_" prefix. All new official library names must use this prefix.`,
		DisableModes:    []checkmode.Type{checkmode.Default},
		EnableModes:     []checkmode.Type{checkmode.Official},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.Official},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldMissingOfficialPrefix,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           `contains "Arduino"`,
		Description:     "Case insensitive",
		MessageTemplate: `Library name {{.}} contains "Arduino". This is superfluous.`,
		DisableModes:    []checkmode.Type{checkmode.Official},
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldContainsArduino,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "",
		Brief:           `contains "library"`,
		Description:     "Case insensitive",
		MessageTemplate: `Library name {{.}} contains "library". This is superfluous.`,
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldContainsLibrary,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "LP005",
		Brief:           "duplicate name",
		Description:     "This requirement only applies to the library.properties name value. There is no requirement to change the repository or header file names.",
		MessageTemplate: "Library name {{.}} is in use by a library in the Library Manager index. Each library must have a unique name value.",
		DisableModes:    []checkmode.Type{checkmode.LibraryManagerIndexed},
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      []checkmode.Type{checkmode.LibraryManagerSubmission},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldDuplicate,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "name field",
		ID:              "LP006",
		Brief:           "not in LM index",
		Description:     "The name value is the identifier used to install the library and define dependencies, so it should not be changed.",
		MessageTemplate: "Library name {{.}} not found in the Library Manager index. Library names are not allowed to change after being added to the index. See: https://github.com/arduino/Arduino/wiki/Library-Manager-FAQ#how-can-i-change-my-librarys-name",
		DisableModes:    []checkmode.Type{checkmode.Default},
		EnableModes:     []checkmode.Type{checkmode.LibraryManagerIndexed},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesNameFieldNotInIndex,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "version field",
		ID:              "LP004",
		Brief:           "missing version field",
		Description:     "",
		MessageTemplate: "missing version field in library.properties",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesVersionFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "version field",
		ID:              "",
		Brief:           "invalid",
		Description:     `Must be compliant with "relaxed semver".`,
		MessageTemplate: "library.properties version value {{.}} is invalid. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesVersionFieldNonRelaxedSemver,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "version field",
		ID:              "",
		Brief:           "non-semver",
		Description:     "",
		MessageTemplate: "library.properties version value {{.}} is not compliant with the semver specification. See https://semver.org/",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesVersionFieldNonSemver,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "author field",
		ID:              "",
		Brief:           "missing author field",
		Description:     "",
		MessageTemplate: "missing required author field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesAuthorFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "author field",
		ID:              "",
		Brief:           "author < min length",
		Description:     "",
		MessageTemplate: "library.properties author value is less than minimum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesAuthorFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "maintainer field",
		ID:              "",
		Brief:           "missing maintainer field",
		Description:     "",
		MessageTemplate: "missing required maintainer field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesMaintainerFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "maintainer field",
		ID:              "",
		Brief:           "maintainer < min length",
		Description:     "",
		MessageTemplate: "library.properties maintainer value is less than minimum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesMaintainerFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "maintainer field",
		ID:              "",
		Brief:           `starts with "Arduino"`,
		Description:     "Case insensitive.",
		MessageTemplate: `library.properties maintainer value {{.}} starts with "Arduino". 3rd party libraries are not maintained by Arduino.`,
		DisableModes:    []checkmode.Type{checkmode.Official},
		EnableModes:     []checkmode.Type{checkmode.Default},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesMaintainerFieldStartsWithArduino,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "email field",
		ID:              "",
		Brief:           `"email" field used as alias for "maintainer"`,
		Description:     "This was in an early draft of the beta 1.5 library specification.",
		MessageTemplate: `library.properties "email" field used as alias for "maintainer". This is deprecated.`,
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesEmailFieldAsMaintainerAlias,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "email field",
		ID:              "",
		Brief:           "email < min length",
		Description:     "",
		MessageTemplate: "library.properties email value is less than minimum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesEmailFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "email field",
		ID:              "",
		Brief:           `starts with "Arduino"`,
		Description:     "Case insensitive.",
		MessageTemplate: `library.properties email value {{.}} starts with "Arduino". 3rd party libraries are not maintained by Arduino.`,
		DisableModes:    []checkmode.Type{checkmode.Official},
		EnableModes:     []checkmode.Type{checkmode.Default},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesEmailFieldStartsWithArduino,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "sentence field",
		ID:              "",
		Brief:           "missing sentence field",
		Description:     "",
		MessageTemplate: "missing required sentence field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesSentenceFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "sentence field",
		ID:              "",
		Brief:           "sentence < min length",
		Description:     "",
		MessageTemplate: "library.properties sentence value is less than minimum length",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesSentenceFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "sentence field",
		ID:              "",
		Brief:           "sentence spell check",
		Description:     "",
		MessageTemplate: "A commonly misspelled word was found in the library.properties sentence field. Suggested correction: {{.}}",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesSentenceFieldSpellCheck,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "paragraph field",
		ID:              "",
		Brief:           "missing paragraph field",
		Description:     "",
		MessageTemplate: "missing required paragraph field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesParagraphFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "paragraph field",
		ID:              "",
		Brief:           "paragraph spell check",
		Description:     "",
		MessageTemplate: "A commonly misspelled word was found in the library.properties paragraph field. Suggested correction: {{.}}",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesParagraphFieldSpellCheck,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "paragraph field",
		ID:              "",
		Brief:           "paragraph repeats sentence",
		Description:     "",
		MessageTemplate: "The library.properties paragraph field repeats the sentence field. These are displayed together so redundancy is not needed.",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesParagraphFieldRepeatsSentence,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "category field",
		ID:              "",
		Brief:           "missing category field",
		Description:     `This can cause a warning and results in the default "Uncategorized" category being used.`,
		MessageTemplate: "missing category field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesCategoryFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "category field",
		ID:              "",
		Brief:           "invalid category value",
		Description:     `This can cause a warning and results in the default "Uncategorized" category being used.`,
		MessageTemplate: "invalid category field value {{.}} in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesCategoryFieldInvalid,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "category field",
		ID:              "",
		Brief:           `"Uncategorized" category value`,
		Description:     "There is no good reason for using this non-specification compliant category value.",
		MessageTemplate: `Use of "Uncategorized" category value in library.properties. Please use one of the supported categories listed at https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format`,
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesCategoryFieldUncategorized,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "url field",
		ID:              "",
		Brief:           "missing url field",
		Description:     "",
		MessageTemplate: "missing required url field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesUrlFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "url field",
		ID:              "",
		Brief:           "invalid url format",
		Description:     "",
		MessageTemplate: "library.properties url field value {{.}} does not have a valid URL format.",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesUrlFieldInvalid,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "url field",
		ID:              "",
		Brief:           "Dead URL",
		Description:     "",
		MessageTemplate: "Unable to load the library.properties url field: {{.}}",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesUrlFieldDeadLink,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "architectures field",
		ID:              "",
		Brief:           "missing architectures field",
		Description:     "Defaults to *, but it's better to explicitly define architectures.",
		MessageTemplate: "missing architectures field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesArchitecturesFieldMissing,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "architectures field",
		ID:              "",
		Brief:           "architectures blank",
		Description:     "Causes library to be considered incompatible with all architectures.",
		MessageTemplate: "Empty library.properties architectures field. Please define specific architectures or set to * if compatible with all. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesArchitecturesFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "depends field",
		ID:              "",
		Brief:           "disallowed characters",
		Description:     "",
		MessageTemplate: "disallowed characters in library.properties depends field {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    nil,
		ErrorModes:      []checkmode.Type{checkmode.All},
		CheckFunction:   checkfunctions.LibraryPropertiesDependsFieldDisallowedCharacters,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "depends field",
		ID:              "LP012",
		Brief:           "Dependency not in index",
		Description:     "",
		MessageTemplate: "library.properties depends field item(s) {{.}} not found in the Library Manager index.",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.All},
		ErrorModes:      nil,
		CheckFunction:   checkfunctions.LibraryPropertiesDependsFieldNotInIndex,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "dot_a_linkage field",
		ID:              "",
		Brief:           "invalid value",
		Description:     "",
		MessageTemplate: "invalid dot_a_linkage field value {{.}} in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesDotALinkageFieldInvalid,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "dot_a_linkage field",
		ID:              "",
		Brief:           `"true" with "1.5" library format`,
		Description:     `dot_a_linkage feature is only supported for the "1.5" or "recursive" library format.`,
		MessageTemplate: `library.properties dot_a_linkage field enabled but library is not in "1.5" format. See: https://arduino.github.io/arduino-cli/latest/library-specification/#source-code`,
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesDotALinkageFieldTrueWithFlatLayout,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "includes field",
		ID:              "",
		Brief:           "includes blank",
		Description:     `Caused the "Sketch > Include library" feature of previous IDE versions to add an empty #include directive to the sketch.`,
		MessageTemplate: "Empty library.properties includes field. Please either define includes or remove this optional field. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesIncludesFieldLTMinLength,
	},
	{
		ProjectType:     projecttype.Library,
		Category:        "library.properties",
		Subcategory:     "precompiled field",
		ID:              "",
		Brief:           "precompiled with flat layout",
		Description:     `precompiled feature is only supported for the "1.5" or "recursive" library format.`,
		MessageTemplate: `library.properties precompiled field value {{.}}, is not supported with "1.0" format. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format`,
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.LibraryPropertiesPrecompiledFieldEnabledWithFlatLayout,
	},
	{
		ProjectType:     projecttype.Sketch,
		Category:        "structure",
		Subcategory:     "",
		ID:              "SS001",
		Brief:           ".pde extension",
		Description:     "The .pde extension is used by both Processing sketches and Arduino sketches. Processing sketches should either be in the \"data\" subfolder of the sketch or in the \"extras\" folder of the library. Arduino sketches should use the modern .ino extension",
		MessageTemplate: "{{.}} uses deprecated .pde file extension. Use .ino for Arduino sketches",
		DisableModes:    nil,
		EnableModes:     []checkmode.Type{checkmode.All},
		InfoModes:       nil,
		WarningModes:    []checkmode.Type{checkmode.Permissive},
		ErrorModes:      []checkmode.Type{checkmode.Default},
		CheckFunction:   checkfunctions.PdeSketchExtension,
	},
}
