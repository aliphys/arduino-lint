{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/arduino/arduino-check/main/etc/schema/arduino-library-properties-schema.json",
  "title": "Arduino library.properties JSON schema",
  "description": "library.properties is the metadata file for Arduino libraries. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-metadata",
  "$comment": "For information on the Arduino library.properties format, see https://godoc.org/github.com/arduino/go-properties-orderedmap",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^(([a-zA-Z][a-zA-Z0-9 _\\.\\-]*)|([0-9][a-zA-Z0-9 _\\.\\-]*[a-zA-Z][a-zA-Z0-9 _\\.\\-]*))$"
    },
    "version": {
      "type": "string",
      "$comment": "https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string adjusted to also allow MAJOR.MINOR and with unused non-capturing group syntax removed",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(-((0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\\+([0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*))?$"
    },
    "author": {
      "type": "string",
      "minLength": 1
    },
    "maintainer": {
      "type": "string",
      "minLength": 1
    },
    "sentence": {
      "type": "string",
      "minLength": 1
    },
    "paragraph": {
      "type": "string"
    },
    "category": {
      "type": "string",
      "enum": [
        "Display",
        "Communication",
        "Signal Input/Output",
        "Sensors",
        "Device Control",
        "Timing",
        "Data Storage",
        "Data Processing",
        "Other"
      ]
    },
    "url": {
      "type": "string",
      "format": "uri"
    },
    "architectures": {
      "type": "string",
      "minLength": 1
    },
    "depends": {
      "type": "string",
      "pattern": "^[a-zA-Z][a-zA-Z\\d _\\.\\-,]*$"
    },
    "dot_a_linkage": {
      "type": "string",
      "enum": ["true", "false"]
    },
    "includes": {
      "type": "string",
      "minLength": 1
    },
    "precompiled": {
      "type": "string",
      "enum": ["true", "full", "false"]
    },
    "ldflags": {
      "type": "string"
    }
  },
  "propertyNames": {
    "not": {
      "$comment": "Misspelled optional property names",
      "pattern": "^((depend)|(D((epends?)|(EPENDS?)))|(dot_a_linkages)|(dot-?a-?linkages?)|(D(((ot)|(OT))[_-]?((a)|(A))[_-]?((linkages?)|(LINKAGES?))))|(include)|(I((ncludes?)|(NCLUDES?)))|(precompile)|(pre[-_]compiled?)|(P((re[-_]?compiled?)|(RE[-_]?COMPILED?)))|(ldflag)|(ld[-_]flags?)|(L((d[-_]?flags?)|(D[-_]?FLAGS?))))$"
    }
  },
  "required": ["name", "version", "author", "maintainer", "sentence", "paragraph", "category", "url", "architectures"]
}
