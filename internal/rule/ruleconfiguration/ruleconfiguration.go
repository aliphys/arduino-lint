// This file is part of Arduino Lint.
//
// Copyright 2020 ARDUINO SA (http://www.arduino.cc/)
//
// This software is released under the GNU General Public License version 3,
// which covers the main part of Arduino Lint.
// The terms of this license can be found at:
// https://www.gnu.org/licenses/gpl-3.0.en.html
//
// You can be released from the requirements of the above licenses by purchasing
// a commercial license. Buying such a license is mandatory if you want to
// modify or otherwise use the software for commercial activities involving the
// Arduino software without disclosing the source code of your own applications.
// To purchase a commercial license, send an email to license@arduino.cc.

/*
Package ruleconfiguration defines the configuration of each rule:
- metadata
- output template
- under which conditions it's enabled
- the level of a failure
- which function implements it
*/
package ruleconfiguration

import (
	"github.com/arduino/arduino-lint/internal/configuration/rulemode"
	"github.com/arduino/arduino-lint/internal/project/projecttype"
	"github.com/arduino/arduino-lint/internal/rule/rulefunction"
)

// Type is the type for rule configurations.
type Type struct {
	ProjectType      projecttype.Type // The project type the rule applies to.
	SuperprojectType projecttype.Type // The superproject type requirement for the rule.
	// The following fields provide arbitrary text for the tool output associated with each rule:
	Category        string
	Subcategory     string
	ID              string // Unique rule identifier: <project type identifier (L|S|P|I)><category identifier><number>
	Brief           string // Short description of the rule.
	Description     string // Supplemental information about the rule.
	MessageTemplate string // The warning/error message template displayed when the rule is violated. Will be filled by rule function output.
	// The following fields define under which tool configuration modes the rule will run:
	DisableModes []rulemode.Type // Rule is disabled when tool is in any of these modes.
	EnableModes  []rulemode.Type // Rule is only enabled when tool is in one of these modes.
	// The following fields define the rule level in each configuration mode:
	InfoModes    []rulemode.Type   // Failure of the rule only results in an informational message.
	WarningModes []rulemode.Type   // Failure of the rule is considered a warning.
	ErrorModes   []rulemode.Type   // Failure of the rule is considered an error.
	RuleFunction rulefunction.Type // The function that implements the rule.
}

// Configurations returns the slice of rule configurations.
func Configurations() []Type {
	return configurations
}

// configurations is an array of structs that define the configuration of each rule.
var configurations = []Type{
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "general",
		ID:               "LS001",
		Brief:            "invalid library",
		Description:      "",
		MessageTemplate:  "Path does not contain a valid Arduino library. See: https://arduino.github.io/arduino-cli/latest/library-specification",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryInvalid,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "root folder",
		ID:               "LS002",
		Brief:            "folder name too long",
		Description:      "This will be problematic for people doing manual installation of the library.",
		MessageTemplate:  "Folder name {{.}} exceeds maximum length. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-root-folder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryFolderNameGTMaxLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "root folder",
		ID:               "LS003",
		Brief:            "prohibited character in folder name",
		Description:      "This will be problematic for people doing manual installation of the library.",
		MessageTemplate:  "Prohibited character(s) in folder name: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-root-folder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProhibitedCharactersInLibraryFolderName,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "structure",
		Subcategory:      "miscellaneous",
		ID:               "LS004",
		Brief:            "submodule",
		Description:      "",
		MessageTemplate:  `Git submodule detected. Library Manager installations and installations from GitHub's "Download ZIP" will only contain an empty folder in place of the submodule.`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.LibraryHasSubmodule,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "miscellaneous",
		ID:               "LS005",
		Brief:            "symlink",
		Description:      "",
		MessageTemplate:  "Symlink(s) found at {{.}}. Symlinks cause difficulties for Windows users. These block addition to the Arduino Library Manager index.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.LibraryManagerSubmission, rulemode.LibraryManagerIndexed},
		RuleFunction:     rulefunction.LibraryContainsSymlinks,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "miscellaneous",
		ID:               "LS006",
		Brief:            ".development file",
		Description:      "See: https://arduino.github.io/arduino-cli/latest/library-specification/#development-flag-file",
		MessageTemplate:  ".development flag file found. This file allows users to accidentally modify examples. Presence of this file blocks addition to the Library Manager index.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.LibraryManagerSubmission, rulemode.LibraryManagerIndexed, rulemode.Strict},
		RuleFunction:     rulefunction.LibraryHasDotDevelopmentFile,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "structure",
		Subcategory:      "miscellaneous",
		ID:               "LS007",
		Brief:            ".exe file",
		Description:      "",
		MessageTemplate:  ".exe file(s) found: {{.}}. Presence of these files blocks addition to the Library Manager index.",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      []rulemode.Type{rulemode.LibraryManagerSubmission, rulemode.LibraryManagerIndexed},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryHasExe,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "source code",
		ID:               "LS008",
		Brief:            "name-header mismatch",
		Description:      `The name value determines the installation folder name and the folder match to the filename in the #include directive influences "folder name priority".`,
		MessageTemplate:  "No header file found matching library name ({{.}}). Best practices are for primary header filename to match library name.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        []rulemode.Type{rulemode.Permissive},
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldHeaderMismatch,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "source code",
		ID:               "LS009",
		Brief:            "src folder case",
		Description:      "",
		MessageTemplate:  "Incorrect src folder name case: {{.}}. This will cause the library to not be recognized on case-sensitive file systems. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-root-folder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.IncorrectLibrarySrcFolderNameCase,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "source code",
		ID:               "LS010",
		Brief:            "recursive with utility folder",
		Description:      "",
		MessageTemplate:  `Utility folder found in "1.5" format library. Compilation of this folder is only supported on "1.0" format libraries. See: https://arduino.github.io/arduino-cli/latest/library-specification/#source-code`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.RecursiveLibraryWithUtilityFolder,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "extras folder",
		ID:               "LS011",
		Brief:            "incorrect extras folder name",
		Description:      "",
		MessageTemplate:  "Potentially misspelled extras folder name found: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#extra-documentation",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MisspelledExtrasFolderName,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "extras folder",
		ID:               "LS012",
		Brief:            "extras folder name case",
		Description:      "",
		MessageTemplate:  "Incorrect extras folder name case: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#extra-documentation",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.IncorrectExtrasFolderNameCase,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP001",
		Brief:            "missing library.properties",
		Description:      `Although not required for 1.0 format libraries (AKA "legacy") not in Library Manager, metadata is useful, hence recommended.`,
		MessageTemplate:  "Library has no library.properties metadata file. This file provides useful information and is required for admission to the Library Manager index. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.LibraryManagerSubmission, rulemode.LibraryManagerIndexed, rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP002",
		Brief:            "incorrect library.properties file name",
		Description:      "",
		MessageTemplate:  "Incorrectly spelled library.properties file name found: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MisspelledLibraryPropertiesFileName,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP003",
		Brief:            "library.properties file name case",
		Description:      `This causes "1.5" format (AKA "recursive layout") libraries to not be recognized on case-sensitive file systems.`,
		MessageTemplate:  "Incorrect library.properties file name case: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.IncorrectLibraryPropertiesFileNameCase,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP004",
		Brief:            "redundant library.properties",
		Description:      "",
		MessageTemplate:  "Redundant library.properties file found at {{.}}. Only the file in the root of the library is used. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.RedundantLibraryProperties,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP005",
		Brief:            "library.properties format",
		Description:      "See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		MessageTemplate:  "library.properties has an invalid format: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesFormat,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "general",
		ID:               "LP006",
		Brief:            "misspelled library.properties field",
		Description:      "",
		MessageTemplate:  "Potentially misspelled library.properties field name detected. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesMisspelledOptionalField,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP007",
		Brief:            "missing name",
		Description:      "",
		MessageTemplate:  "Missing name field in library.properties. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP008",
		Brief:            "name < min length",
		Description:      "",
		MessageTemplate:  "library.properties name value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP009",
		Brief:            "name > max length",
		Description:      "",
		MessageTemplate:  "library.properties name value {{.}} is longer than maximum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldGTMaxLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP010",
		Brief:            "name > recommended length",
		Description:      "",
		MessageTemplate:  "library.properties name value {{.}} is longer than the recommended length of 16 characters.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldGTRecommendedLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP011",
		Brief:            "prohibited character in name",
		Description:      "",
		MessageTemplate:  "Prohibited character(s) in library.properties name value: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldDisallowedCharacters,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP012",
		Brief:            `name starts with "Arduino"`,
		Description:      `Case insensitive. Only 3rd party libraries added to the Library Manager index prior to the enactment of this rule are allowed to have this name prefix.`,
		MessageTemplate:  `Library name {{.}} starts with "Arduino". These names are reserved for official libraries.`,
		DisableModes:     []rulemode.Type{rulemode.Official},
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.LibraryManagerSubmission, rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldStartsWithArduino,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP013",
		Brief:            "name missing official prefix",
		Description:      "",
		MessageTemplate:  `Library name {{.}} is missing the "Arduino_" prefix. All new official library names must use this prefix.`,
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      []rulemode.Type{rulemode.Official},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldMissingOfficialPrefix,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP014",
		Brief:            `name contains "Arduino"`,
		Description:      "Case insensitive",
		MessageTemplate:  `Library name {{.}} contains "Arduino". This is superfluous.`,
		DisableModes:     []rulemode.Type{rulemode.Official},
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldContainsArduino,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP015",
		Brief:            "name contains spaces",
		Description:      "Best practices is for the name value, installation folder, and primary header filename to all match, but this is not possible with names containing spaces.",
		MessageTemplate:  "library.properties name {{.}} contains spaces. Although supported, best practices is to not use spaces.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldHasSpaces,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP016",
		Brief:            `name contains "library"`,
		Description:      "Case insensitive",
		MessageTemplate:  `Library name {{.}} contains "library". This is superfluous.`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldContainsLibrary,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP017",
		Brief:            "duplicate name",
		Description:      "This requirement only applies to the library.properties name value. There is no requirement to change the repository or header file names.",
		MessageTemplate:  "Library name {{.}} is in use by a library in the Library Manager index. Each library must have a unique name value. If your library is already in the index, use the \"--library-manager update\" flag.",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      []rulemode.Type{rulemode.LibraryManagerSubmission},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldDuplicate,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "library.properties",
		Subcategory:      "name field",
		ID:               "LP018",
		Brief:            "not in LM index",
		Description:      "The name value is the identifier used to install the library and define dependencies, so it should not be changed.",
		MessageTemplate:  "Library name {{.}} not found in the Library Manager index. Library names are not allowed to change after being added to the index. See: https://github.com/arduino/Arduino/wiki/Library-Manager-FAQ#how-can-i-change-my-librarys-name",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      []rulemode.Type{rulemode.LibraryManagerIndexed},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesNameFieldNotInIndex,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "version field",
		ID:               "LP019",
		Brief:            "missing version field",
		Description:      "",
		MessageTemplate:  "Missing version field in library.properties",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesVersionFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "version field",
		ID:               "LP020",
		Brief:            "invalid version",
		Description:      `Must be compliant with "relaxed semver".`,
		MessageTemplate:  "library.properties version value {{.}} is invalid. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesVersionFieldNonRelaxedSemver,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "version field",
		ID:               "LP021",
		Brief:            "non-semver version",
		Description:      "",
		MessageTemplate:  "library.properties version value {{.}} is not compliant with the semver specification. See https://semver.org/",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesVersionFieldNonSemver,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "library.properties",
		Subcategory:      "version field",
		ID:               "LP022",
		Brief:            "tag mismatch",
		Description:      "The Library Manager indexer will reject any tag that has a library.properties version equal to a previous tag in the index.",
		MessageTemplate:  "The latest Git tag appears to be greater than the library.properties version value: {{.}}. You must update the version value before making the tag.",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      []rulemode.Type{rulemode.LibraryManagerIndexed},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesVersionFieldBehindTag,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "author field",
		ID:               "LP023",
		Brief:            "missing author field",
		Description:      "",
		MessageTemplate:  "Missing author field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesAuthorFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "author field",
		ID:               "LP024",
		Brief:            "author < min length",
		Description:      "",
		MessageTemplate:  "library.properties author value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesAuthorFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "maintainer field",
		ID:               "LP025",
		Brief:            "missing maintainer field",
		Description:      "",
		MessageTemplate:  "Missing maintainer field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesMaintainerFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "maintainer field",
		ID:               "LP026",
		Brief:            "maintainer < min length",
		Description:      "",
		MessageTemplate:  "library.properties maintainer value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesMaintainerFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "maintainer field",
		ID:               "LP027",
		Brief:            `maintainer starts with "Arduino"`,
		Description:      "Case insensitive.",
		MessageTemplate:  `library.properties maintainer value {{.}} starts with "Arduino". 3rd party libraries are not maintained by Arduino.`,
		DisableModes:     []rulemode.Type{rulemode.Official},
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesMaintainerFieldStartsWithArduino,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "email field",
		ID:               "LP028",
		Brief:            `"email" used as alias for "maintainer"`,
		Description:      "This was only in an early draft of the beta 1.5 library specification.",
		MessageTemplate:  `library.properties "email" field used as alias for "maintainer". This is deprecated.`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesEmailFieldAsMaintainerAlias,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "email field",
		ID:               "LP029",
		Brief:            "email < min length",
		Description:      "",
		MessageTemplate:  "library.properties email value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesEmailFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "email field",
		ID:               "LP030",
		Brief:            `email starts with "Arduino"`,
		Description:      "Case insensitive.",
		MessageTemplate:  `library.properties email value {{.}} starts with "Arduino". 3rd party libraries are not maintained by Arduino.`,
		DisableModes:     []rulemode.Type{rulemode.Official},
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesEmailFieldStartsWithArduino,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "sentence field",
		ID:               "LP031",
		Brief:            "missing sentence field",
		Description:      "",
		MessageTemplate:  "Missing sentence field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesSentenceFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "sentence field",
		ID:               "LP032",
		Brief:            "sentence < min length",
		Description:      "",
		MessageTemplate:  "library.properties sentence value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesSentenceFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "sentence field",
		ID:               "LP033",
		Brief:            "sentence spell check",
		Description:      "",
		MessageTemplate:  "A commonly misspelled word was found in the library.properties sentence field. Suggested correction: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.LibraryPropertiesSentenceFieldSpellCheck,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "paragraph field",
		ID:               "LP034",
		Brief:            "missing paragraph field",
		Description:      "",
		MessageTemplate:  "Missing paragraph field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesParagraphFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "paragraph field",
		ID:               "LP035",
		Brief:            "paragraph spell check",
		Description:      "",
		MessageTemplate:  "A commonly misspelled word was found in the library.properties paragraph field. Suggested correction: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.LibraryPropertiesParagraphFieldSpellCheck,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "paragraph field",
		ID:               "LP036",
		Brief:            "paragraph repeats sentence",
		Description:      "",
		MessageTemplate:  "The library.properties paragraph field repeats the sentence field. These are displayed together so redundancy is not needed.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesParagraphFieldRepeatsSentence,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "category field",
		ID:               "LP037",
		Brief:            "missing category field",
		Description:      `This can cause a warning and results in the default "Uncategorized" category being used.`,
		MessageTemplate:  "Missing category field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesCategoryFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "category field",
		ID:               "LP038",
		Brief:            "invalid category value",
		Description:      `This can cause a warning and results in the default "Uncategorized" category being used.`,
		MessageTemplate:  "Invalid category field value {{.}} in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesCategoryFieldInvalid,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "category field",
		ID:               "LP039",
		Brief:            `"Uncategorized" category value`,
		Description:      "There is no good reason for using this non-specification compliant category value.",
		MessageTemplate:  `Use of "Uncategorized" category value in library.properties. Please use one of the allowed categories: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesCategoryFieldUncategorized,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "url field",
		ID:               "LP040",
		Brief:            "missing url field",
		Description:      "",
		MessageTemplate:  "Missing url field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesUrlFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "url field",
		ID:               "LP041",
		Brief:            "invalid url format",
		Description:      "",
		MessageTemplate:  "library.properties url field value {{.}} does not have a valid URL format.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesUrlFieldInvalid,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "url field",
		ID:               "LP042",
		Brief:            "dead URL",
		Description:      "",
		MessageTemplate:  "Unable to load the library.properties url field: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesUrlFieldDeadLink,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "architectures field",
		ID:               "LP043",
		Brief:            "missing architectures field",
		Description:      "Defaults to *, but it's better to explicitly define architectures.",
		MessageTemplate:  "Missing architectures field in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesArchitecturesFieldMissing,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "architectures field",
		ID:               "LP044",
		Brief:            "architectures blank",
		Description:      "Causes library to be considered incompatible with all architectures.",
		MessageTemplate:  "Empty library.properties architectures field. Please define specific architectures or set to * if compatible with all. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesArchitecturesFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "architectures field",
		ID:               "LP045",
		Brief:            "architecture alias",
		Description:      "Alternative development frameworks diverged on architecture naming.",
		MessageTemplate:  "Architecture alias(es) in library.properties architectures field: {{.}}. Please also specify the true Arduino architectures compatibilities of the library. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesArchitecturesFieldSoloAlias,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "architectures field",
		ID:               "LP046",
		Brief:            "architecture case",
		Description:      "",
		MessageTemplate:  "Incorrect case of library.properties architectures field item(s): {{.}}. Architectures are case sensitive. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.LibraryPropertiesArchitecturesFieldValueCase,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "depends field",
		ID:               "LP047",
		Brief:            "prohibited character in depends",
		Description:      "",
		MessageTemplate:  "Prohibited character(s) in library.properties depends field {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesDependsFieldDisallowedCharacters,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "depends field",
		ID:               "LP048",
		Brief:            "depends not in index",
		Description:      "This field should be used to define the dependencies available from Library Manager. Library names are case-sensitive.",
		MessageTemplate:  "library.properties depends field item(s) {{.}} not found in the Library Manager index.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.LibraryPropertiesDependsFieldNotInIndex,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "dot_a_linkage field",
		ID:               "LP049",
		Brief:            "invalid dot_a_linkage value",
		Description:      "",
		MessageTemplate:  "Invalid dot_a_linkage field value {{.}} in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesDotALinkageFieldInvalid,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "dot_a_linkage field",
		ID:               "LP050",
		Brief:            `dot_a_linkage=true with "1.0" library format`,
		Description:      `dot_a_linkage feature is only supported for the "1.5" or "recursive" library format.`,
		MessageTemplate:  `library.properties dot_a_linkage field enabled but library is not in "1.5" format. See: https://arduino.github.io/arduino-cli/latest/library-specification/#source-code`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesDotALinkageFieldTrueWithFlatLayout,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "includes field",
		ID:               "LP051",
		Brief:            "includes blank",
		Description:      `Caused the "Sketch > Include library" feature of previous IDE versions to add an empty #include directive to the sketch.`,
		MessageTemplate:  "Empty library.properties includes field. Please either define includes or remove this optional field. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesIncludesFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "includes field",
		ID:               "LP052",
		Brief:            "includes not in library",
		Description:      `People often think this is the way to define their library's dependencies, which breaks the "Sketch > Include Library" feature for that library.`,
		MessageTemplate:  "library.properties includes field item(s) {{.}} not found in library.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesIncludesFieldItemNotFound,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "precompiled field",
		ID:               "LP053",
		Brief:            "invalid precompiled value",
		Description:      "",
		MessageTemplate:  "Invalid precompiled field value {{.}} in library.properties. See https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesPrecompiledFieldInvalid,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "precompiled field",
		ID:               "LP054",
		Brief:            "precompiled with \"1.0\" format",
		Description:      `precompiled feature is only supported for the "1.5" or "recursive" library format.`,
		MessageTemplate:  `library.properties precompiled field value {{.}}, is not supported with "1.0" format. See: https://arduino.github.io/arduino-cli/latest/library-specification/#libraryproperties-file-format`,
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesPrecompiledFieldEnabledWithFlatLayout,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "library.properties",
		Subcategory:      "ldflags field",
		ID:               "LP055",
		Brief:            "ldflags < min length",
		Description:      "",
		MessageTemplate:  "library.properties ldflags value is less than minimum length.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryPropertiesLdflagsFieldLTMinLength,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "code",
		Subcategory:      "miscellaneous",
		ID:               "LC001",
		Brief:            "Arduino.h case",
		Description:      "This causes compilation failure on case-sensitive file systems.",
		MessageTemplate:  "Incorrect Arduino.h filename case in #include directive: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.IncorrectArduinoDotHFileNameCase,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "LD001",
		Brief:            "no readme",
		Description:      "",
		MessageTemplate:  "No readme found. Please document your library. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-readmes",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingReadme,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.Library,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "LD002",
		Brief:            "no license file",
		Description:      "",
		MessageTemplate:  "No license file found. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/licensing-a-repository#detecting-a-license",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingLicenseFile,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "documentation",
		Subcategory:      "examples",
		ID:               "LD003",
		Brief:            "stray sketch",
		Description:      "",
		MessageTemplate:  "Sketch(es) found outside examples and extras folders: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-examples",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.LibraryHasStraySketches,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "documentation",
		Subcategory:      "examples",
		ID:               "LD004",
		Brief:            "no examples",
		Description:      "",
		MessageTemplate:  "No example sketches found. Please provide examples. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-examples",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       nil,
		RuleFunction:     rulefunction.MissingExamples,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "documentation",
		Subcategory:      "examples",
		ID:               "LD005",
		Brief:            "incorrect examples folder name",
		Description:      "",
		MessageTemplate:  "Potentially misspelled examples folder name found: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-examples",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.MisspelledExamplesFolderName,
	},
	{
		ProjectType:      projecttype.Library,
		SuperprojectType: projecttype.All,
		Category:         "documentation",
		Subcategory:      "examples",
		ID:               "LD006",
		Brief:            "examples folder name case",
		Description:      "",
		MessageTemplate:  "Incorrect examples folder name case: {{.}}. See: https://arduino.github.io/arduino-cli/latest/library-specification/#library-examples",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.IncorrectExamplesFolderNameCase,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "root folder",
		ID:               "SS001",
		Brief:            "name mismatch",
		Description:      "",
		MessageTemplate:  "Sketch file/folder name mismatch. The primary sketch file name must match the folder: {{.}}. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#primary-sketch-file",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.SketchNameMismatch,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "file name",
		ID:               "SS002",
		Brief:            "prohibited character in filename",
		Description:      "",
		MessageTemplate:  "Prohibited character(s) in file name(s): {{.}}. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#sketch-root-folder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProhibitedCharactersInSketchFileName,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "file name",
		ID:               "SS003",
		Brief:            "file name too long",
		Description:      "",
		MessageTemplate:  "File name(s): {{.}} exceed maximum length. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#sketch-root-folder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.SketchFileNameGTMaxLength,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "file name",
		ID:               "SS004",
		Brief:            ".pde extension",
		Description:      "The .pde extension is used by both Processing sketches and Arduino sketches. Processing sketches should either be in the \"data\" subfolder of the sketch or in the \"extras\" folder of the library. Arduino sketches should use the modern .ino extension.",
		MessageTemplate:  "{{.}} uses deprecated .pde file extension. Use .ino for Arduino sketches.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PdeSketchExtension,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "structure",
		Subcategory:      "miscellaneous",
		ID:               "SS005",
		Brief:            "src folder case",
		Description:      "",
		MessageTemplate:  "Incorrect src folder case: {{.}}. This will cause the source files under it to not be compiled on case-sensitive file systems. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#src-subfolder",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.IncorrectSketchSrcFolderNameCase,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "code",
		Subcategory:      "miscellaneous",
		ID:               "SC001",
		Brief:            "Arduino.h case",
		Description:      "This causes compilation failure on filename case-sensitive file systems.",
		MessageTemplate:  "Incorrect Arduino.h filename case in #include directive: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.IncorrectArduinoDotHFileNameCase,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.Sketch,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "SD001",
		Brief:            "no readme",
		Description:      "",
		MessageTemplate:  "No readme found. Please document your sketch. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-readmes",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingReadme,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.Sketch,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "SD002",
		Brief:            "no license file",
		Description:      "",
		MessageTemplate:  "No license file found. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/licensing-a-repository#detecting-a-license",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingLicenseFile,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "sketch.json",
		Subcategory:      "general",
		ID:               "SM001",
		Brief:            "sketch.json JSON format",
		Description:      "",
		MessageTemplate:  "sketch.json is not a valid JSON document. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.SketchDotJSONJSONFormat,
	},
	{
		ProjectType:      projecttype.Sketch,
		SuperprojectType: projecttype.All,
		Category:         "sketch.json",
		Subcategory:      "general",
		ID:               "SM002",
		Brief:            "sketch.json data format",
		Description:      "",
		MessageTemplate:  "sketch.json has an invalid data format: {{.}}. See: https://arduino.github.io/arduino-cli/latest/sketch-specification/#metadata",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Permissive},
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.SketchDotJSONFormat,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.Platform,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "PD001",
		Brief:            "no readme",
		Description:      "",
		MessageTemplate:  "No readme found. Please document your boards platform. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/about-readmes",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      nil,
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingReadme,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.Platform,
		Category:         "documentation",
		Subcategory:      "miscellaneous",
		ID:               "PD002",
		Brief:            "no license file",
		Description:      "",
		MessageTemplate:  "No license file found. See: https://docs.github.com/en/free-pro-team@latest/github/creating-cloning-and-archiving-repositories/licensing-a-repository#detecting-a-license",
		DisableModes:     []rulemode.Type{rulemode.Default},
		EnableModes:      nil,
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.MissingLicenseFile,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF001",
		Brief:            "boards.txt missing",
		Description:      "",
		MessageTemplate:  "Required boards.txt is missing. Expected at: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF002",
		Brief:            "invalid boards.txt",
		Description:      "",
		MessageTemplate:  "boards.txt has an invalid format: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtFormat,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF003",
		Brief:            "missing boardID.name",
		Description:      "",
		MessageTemplate:  "Missing name property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#boardstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDNameMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF004",
		Brief:            "boardID.name < min length",
		Description:      "",
		MessageTemplate:  "name value for board ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#boardstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDNameLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF005",
		Brief:            "missing build.board",
		Description:      "",
		MessageTemplate:  "Missing build.board property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#boardstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.BoardsTxtBoardIDBuildBoardMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF006",
		Brief:            "build.board < min length",
		Description:      "",
		MessageTemplate:  "build.board value for board ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#boardstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDBuildBoardLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF007",
		Brief:            "missing build.core",
		Description:      "",
		MessageTemplate:  "Missing build.core property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#cores",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDBuildCoreMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF008",
		Brief:            "build.core < min length",
		Description:      "",
		MessageTemplate:  "build.core value for board ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#cores",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDBuildCoreLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF009",
		Brief:            "use of compiler.x.extra_flags",
		Description:      "",
		MessageTemplate:  "Board ID(s) {{.}} use compiler.x.extra_flags properties. These are intended to be left for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.BoardsTxtUserExtraFlagsUsage,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF011",
		Brief:            "non-empty hide value",
		Description:      "",
		MessageTemplate:  "hide value for board ID(s) {{.}} is not empty. The value of this property is ignored. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#hiding-boards",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.BoardsTxtBoardIDHideInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF012",
		Brief:            "menu title < min length",
		Description:      "",
		MessageTemplate:  "title for menu ID(s) {{.}} are less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#custom-board-options",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtMenuMenuIDLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF014",
		Brief:            "serial.disableDTR value invalid",
		Description:      "",
		MessageTemplate:  "serial.disableDTR value for board ID(s) {{.}} is invalid. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#serial-monitor-control-signal-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDSerialDisableDTRInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF015",
		Brief:            "serial.disableRTS value invalid",
		Description:      "",
		MessageTemplate:  "serial.disableRTS value for board ID(s) {{.}} is invalid. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#serial-monitor-control-signal-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDSerialDisableRTSInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF016",
		Brief:            "missing upload.tool",
		Description:      "",
		MessageTemplate:  "Missing upload.tool property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#sketch-upload-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadToolMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF017",
		Brief:            "upload.tool < min length",
		Description:      "",
		MessageTemplate:  "upload.tool value for board ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#sketch-upload-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadToolLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF018",
		Brief:            "missing upload.maximum_size",
		Description:      "Although not required, this provides the build system and the user with very useful information so should be provided.",
		MessageTemplate:  "Missing upload.maximum_size property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadMaximumSizeMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF019",
		Brief:            "upload.maximum_size not a number",
		Description:      "",
		MessageTemplate:  "upload.maximum_size value for board ID(s) {{.}} is not a number. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadMaximumSizeInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF020",
		Brief:            "missing upload.maximum_data_size",
		Description:      "Although not required, this provides the build system and the user with very useful information so should be provided.",
		MessageTemplate:  "Missing upload.maximum_data_size property for board ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadMaximumDataSizeMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF021",
		Brief:            "upload.maximum_data_size not a number",
		Description:      "",
		MessageTemplate:  "upload.maximum_data_size value for board ID(s) {{.}} is not a number. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadMaximumDataSizeInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF022",
		Brief:            "upload.use_1200bps_touch value invalid",
		Description:      "",
		MessageTemplate:  "upload.use_1200bps_touch value for board ID(s) {{.}} is invalid. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#1200-bps-bootloader-reset",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadUse1200bpsTouchInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF023",
		Brief:            "upload.wait_for_upload_port value invalid",
		Description:      "",
		MessageTemplate:  "upload.wait_for_upload_port value for board ID(s) {{.}} is invalid. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#1200-bps-bootloader-reset",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDUploadWaitForUploadPortInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF024",
		Brief:            "vid.n value invalid format",
		Description:      "",
		MessageTemplate:  "vid.n value for board ID(s) {{.}} has invalid format. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#board-vidpid",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDVidNInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "boards.txt",
		ID:               "PF025",
		Brief:            "pid.n value invalid format",
		Description:      "",
		MessageTemplate:  "pid.n value for board ID(s) {{.}} has invalid format. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#board-vidpid",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.BoardsTxtBoardIDPidNInvalid,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "programmers.txt",
		ID:               "PF026",
		Brief:            "invalid programmers.txt",
		Description:      "",
		MessageTemplate:  "programmers.txt has an invalid format: {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#programmerstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProgrammersTxtFormat,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "programmers.txt",
		ID:               "PF027",
		Brief:            "missing programmerID.name",
		Description:      "",
		MessageTemplate:  "Missing name property for programmer ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#programmerstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProgrammersTxtProgrammerIDNameMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "programmers.txt",
		ID:               "PF028",
		Brief:            "programmerID.name < min length",
		Description:      "",
		MessageTemplate:  "name value for programmer ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#programmerstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProgrammersTxtProgrammerIDNameLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "programmers.txt",
		ID:               "PF029",
		Brief:            "missing programmerID.program.tool",
		Description:      "",
		MessageTemplate:  "Missing program.tool property for programmer ID(s) {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#programmerstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProgrammersTxtProgrammerIDProgramToolMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "programmers.txt",
		ID:               "PF030",
		Brief:            "programmerID.program.tool < min length",
		Description:      "",
		MessageTemplate:  "program.tool value for programmer ID(s) {{.}} is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#programmerstxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.ProgrammersTxtProgrammerIDProgramToolLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF031",
		Brief:            "invalid platform.txt",
		Description:      "",
		MessageTemplate:  "platform.txt has an invalid format: {{.}}. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#platformtxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtFormat,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF032",
		Brief:            "missing name",
		Description:      "",
		MessageTemplate:  "Missing name property in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#platformtxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtNameMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF033",
		Brief:            "name < min length",
		Description:      "",
		MessageTemplate:  "platform.txt name property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#platformtxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtNameLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF034",
		Brief:            "missing version",
		Description:      "",
		MessageTemplate:  "Missing version property in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#platformtxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtVersionMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF035",
		Brief:            "invalid version",
		Description:      `Must be compliant with "relaxed semver".`,
		MessageTemplate:  "platform.txt version value {{.}} is invalid. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#platformtxt",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtVersionNonRelaxedSemver,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF036",
		Brief:            "non-semver version",
		Description:      "",
		MessageTemplate:  "platform.txt version value {{.}} is not compliant with the semver specification. See: https://semver.org/",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtVersionNonSemver,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF037",
		Brief:            "missing compiler.warning_flags.none",
		Description:      "",
		MessageTemplate:  "Missing compiler.warning_flags.none in platform.txt.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerWarningFlagsNoneMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF038",
		Brief:            "missing compiler.warning_flags.default",
		Description:      "",
		MessageTemplate:  "Missing compiler.warning_flags.default in platform.txt.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerWarningFlagsDefaultMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF039",
		Brief:            "missing compiler.warning_flags.more",
		Description:      "",
		MessageTemplate:  "Missing compiler.warning_flags.more in platform.txt.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerWarningFlagsMoreMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF040",
		Brief:            "missing compiler.warning_flags.all",
		Description:      "",
		MessageTemplate:  "Missing compiler.warning_flags.all in platform.txt.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerWarningFlagsAllMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF041",
		Brief:            "missing compiler.optimization_flags.debug",
		Description:      "In order to support the optimization level feature, both compiler.optimization_flags.release and compiler.optimization_flags.debug must be defined.",
		MessageTemplate:  "Missing compiler.optimization_flags.debug in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#sketch-debugging-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtCompilerOptimizationFlagsDebugMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF042",
		Brief:            "missing compiler.optimization_flags.release",
		Description:      "In order to support the optimization level feature, both compiler.optimization_flags.release and compiler.optimization_flags.debug must be defined.",
		MessageTemplate:  "Missing compiler.optimization_flags.release in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#sketch-debugging-configuration",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtCompilerOptimizationFlagsReleaseMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF043",
		Brief:            "missing compiler.c.extra_flags",
		Description:      "",
		MessageTemplate:  "Missing compiler.c.extra_flags in platform.txt. An empty default definition should be provided, which the user can override.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCExtraFlagsMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF044",
		Brief:            "compiler.c.extra_flags not empty",
		Description:      "",
		MessageTemplate:  "platform.txt compiler.c.extra_flags property value is not empty. This property is exclusively for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCExtraFlagsNotEmpty,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF045",
		Brief:            "missing compiler.cpp.extra_flags",
		Description:      "",
		MessageTemplate:  "Missing compiler.cpp.extra_flags in platform.txt. An empty default definition should be provided, which the user can override.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCppExtraFlagsMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF046",
		Brief:            "compiler.cpp.extra_flags not empty",
		Description:      "",
		MessageTemplate:  "platform.txt compiler.cpp.extra_flags property value is not empty. This property is exclusively for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCppExtraFlagsNotEmpty,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF047",
		Brief:            "missing compiler.S.extra_flags",
		Description:      "",
		MessageTemplate:  "Missing compiler.S.extra_flags in platform.txt. An empty default definition should be provided, which the user can override.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerSExtraFlagsMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF048",
		Brief:            "compiler.S.extra_flags not empty",
		Description:      "",
		MessageTemplate:  "platform.txt compiler.S.extra_flags property value is not empty. This property is exclusively for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerSExtraFlagsNotEmpty,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF049",
		Brief:            "missing compiler.ar.extra_flags",
		Description:      "",
		MessageTemplate:  "Missing compiler.ar.extra_flags in platform.txt. An empty default definition should be provided, which the user can override.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerArExtraFlagsMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF050",
		Brief:            "compiler.ar.extra_flags not empty",
		Description:      "",
		MessageTemplate:  "platform.txt compiler.ar.extra_flags property value is not empty. This property is exclusively for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerArExtraFlagsNotEmpty,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF051",
		Brief:            "missing compiler.c.elf.extra_flags",
		Description:      "",
		MessageTemplate:  "Missing compiler.c.elf.extra_flags in platform.txt. An empty default definition should be provided, which the user can override.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCElfExtraFlagsMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF052",
		Brief:            "compiler.c.elf.extra_flags not empty",
		Description:      "",
		MessageTemplate:  "platform.txt compiler.c.elf.extra_flags property value is not empty. This property is exclusively for use by the user.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtCompilerCElfExtraFlagsNotEmpty,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF053",
		Brief:            "recipe.preproc.macros < min length",
		Description:      "",
		MessageTemplate:  "recipe.preproc.macros property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipe-to-run-the-preprocessor",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipePreprocMacrosLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF054",
		Brief:            "recipe.preproc.macros lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.preproc.macros property value does not contain a {compiler.cpp.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipePreprocMacrosExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF055",
		Brief:            "missing recipe.c.o.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.c.o.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCOPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF056",
		Brief:            "recipe.c.o.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.c.o.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCOPatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF057",
		Brief:            "recipe.c.o.pattern lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.c.o.pattern property value does not contain a {compiler.c.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeCOPatternExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF058",
		Brief:            "missing recipe.cpp.o.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.cpp.o.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCppOPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF059",
		Brief:            "recipe.cpp.o.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.cpp.o.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCppOPatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF060",
		Brief:            "recipe.cpp.o.pattern lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.cpp.o.pattern property value does not contain a {compiler.cpp.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeCppOPatternExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF061",
		Brief:            "missing recipe.S.o.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.S.o.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeSOPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF062",
		Brief:            "recipe.S.o.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.S.o.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compile-source-code",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeSOPatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF063",
		Brief:            "recipe.S.o.pattern lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.S.o.pattern property value does not contain a {compiler.S.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeSOPatternExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF064",
		Brief:            "missing recipe.ar.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.ar.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-build-the-corea-archive-file",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeArPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF065",
		Brief:            "recipe.ar.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.ar.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-build-the-corea-archive-file",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeArPatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF066",
		Brief:            "recipe.ar.pattern lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.ar.pattern property value does not contain a {compiler.ar.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeArPatternExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF067",
		Brief:            "missing recipe.c.combine.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.c.combine.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-for-linking",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCCombinePatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF068",
		Brief:            "recipe.c.combine.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.c.combine.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-for-linking",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeCCombinePatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF069",
		Brief:            "recipe.c.combine.pattern lacks extra flags support",
		Description:      "",
		MessageTemplate:  "recipe.c.combine.pattern property value does not contain a {compiler.c.elf.extra_flags} reference. This is necessary to allow the user to customize the compiler command.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeCCombinePatternExtraFlagsSupport,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF070",
		Brief:            "missing recipe.output.tmp_file",
		Description:      "",
		MessageTemplate:  "Missing recipe.output.tmp_file in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-export-compiled-binary",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeOutputTmpFileMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF071",
		Brief:            "recipe.output.tmp_file < min length",
		Description:      "",
		MessageTemplate:  "recipe.output.tmp_file property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-export-compiled-binary",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeOutputTmpFileLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF072",
		Brief:            "missing recipe.output.save_file",
		Description:      "",
		MessageTemplate:  "Missing recipe.output.save_file in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-export-compiled-binary",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeOutputSaveFileMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF073",
		Brief:            "recipe.output.save_file < min length",
		Description:      "",
		MessageTemplate:  "recipe.output.save_file property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-export-compiled-binary",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtRecipeOutputSaveFileLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF074",
		Brief:            "missing recipe.size.pattern",
		Description:      "",
		MessageTemplate:  "Missing recipe.size.pattern in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeSizePatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF075",
		Brief:            "recipe.size.pattern < min length",
		Description:      "",
		MessageTemplate:  "recipe.size.pattern property value is less than the minimum length. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeSizePatternLTMinLength,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF076",
		Brief:            "missing recipe.size.regex",
		Description:      "",
		MessageTemplate:  "Missing recipe.size.regex in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeSizeRegexMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF077",
		Brief:            "missing recipe.size.regex.data",
		Description:      "",
		MessageTemplate:  "Missing recipe.size.regex.data in platform.txt. See: https://arduino.github.io/arduino-cli/latest/platform-specification/#recipes-to-compute-binary-sketch-size",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.PlatformTxtRecipeSizeRegexDataMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF080",
		Brief:            "missing upload.pattern",
		Description:      "",
		MessageTemplate:  "Missing upload.pattern for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#tools",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtUploadPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF081",
		Brief:            "missing program.params.verbose",
		Description:      "",
		MessageTemplate:  "Missing program.params.verbose for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtProgramParamsVerboseMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF082",
		Brief:            "missing program.params.quiet",
		Description:      "",
		MessageTemplate:  "Missing program.params.quiet for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtProgramParamsQuietMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF083",
		Brief:            "missing program.pattern",
		Description:      "",
		MessageTemplate:  "Missing program.pattern for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#tools",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtProgramPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF084",
		Brief:            "missing erase.params.verbose",
		Description:      "",
		MessageTemplate:  "Missing erase.params.verbose for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtEraseParamsVerboseMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF085",
		Brief:            "missing erase.params.quiet",
		Description:      "",
		MessageTemplate:  "Missing erase.params.quiet for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtEraseParamsQuietMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF086",
		Brief:            "missing erase.pattern",
		Description:      "",
		MessageTemplate:  "Missing erase.pattern for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#tools",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtErasePatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF087",
		Brief:            "missing bootloader.params.verbose",
		Description:      "",
		MessageTemplate:  "Missing bootloader.params.verbose for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtBootloaderParamsVerboseMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF088",
		Brief:            "missing bootloader.params.quiet",
		Description:      "",
		MessageTemplate:  "Missing bootloader.params.quiet for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#verbose-parameter",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtBootloaderParamsQuietMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "configuration files",
		Subcategory:      "platform.txt",
		ID:               "PF089",
		Brief:            "missing bootloader.pattern",
		Description:      "",
		MessageTemplate:  "Missing bootloader.pattern for {{.}} tool(s). See: https://arduino.github.io/arduino-cli/latest/platform-specification/#tools",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PlatformTxtBootloaderPatternMissing,
	},
	{
		ProjectType:      projecttype.Platform,
		SuperprojectType: projecttype.All,
		Category:         "code",
		Subcategory:      "miscellaneous",
		ID:               "PC001",
		Brief:            "Arduino.h case",
		Description:      "This causes compilation failure on filename case-sensitive file systems.",
		MessageTemplate:  "Incorrect Arduino.h filename case in #include directive: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     []rulemode.Type{rulemode.Default},
		ErrorModes:       []rulemode.Type{rulemode.Strict},
		RuleFunction:     rulefunction.IncorrectArduinoDotHFileNameCase,
	},
	{
		ProjectType:      projecttype.PackageIndex,
		SuperprojectType: projecttype.All,
		Category:         "data",
		Subcategory:      "general",
		ID:               "IS001",
		Brief:            "missing",
		Description:      "",
		MessageTemplate:  "No package index was found in specified project path. See: https://arduino.github.io/arduino-cli/latest/package_index_json-specification/",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PackageIndexMissing,
	},
	{
		ProjectType:      projecttype.PackageIndex,
		SuperprojectType: projecttype.All,
		Category:         "data",
		Subcategory:      "general",
		ID:               "ID001",
		Brief:            "JSON format",
		Description:      "",
		MessageTemplate:  "Invalid JSON format.",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PackageIndexJSONFormat,
	},
	{
		ProjectType:      projecttype.PackageIndex,
		SuperprojectType: projecttype.All,
		Category:         "data",
		Subcategory:      "general",
		ID:               "ID002",
		Brief:            "data format",
		Description:      "",
		MessageTemplate:  "Invalid package index format: {{.}}",
		DisableModes:     nil,
		EnableModes:      []rulemode.Type{rulemode.Default},
		InfoModes:        nil,
		WarningModes:     nil,
		ErrorModes:       []rulemode.Type{rulemode.Default},
		RuleFunction:     rulefunction.PackageIndexFormat,
	},
}
